---
name: Tests üß™Ô∏è
on:
    pull_request:
    push:
        branches: [master]
        tags-ignore: [v*]
permissions:
    checks: write
    pull-requests: write
    contents: read
    id-token: write

jobs:
    integration-testing:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4
            - uses: actions/setup-go@v4
              with:
                  go-version: stable
            - name: Install gotestsum
              run: go install gotest.tools/gotestsum@latest
            - name: Run tests
              run: |
                  gotestsum --format github-actions \
                    --junitfile junit.xml \
                    --jsonfile test-output.json \
                    -- -v ./tests/integration
            - uses: actions/upload-artifact@v4
              if: always()
              with:
                  name: test-results
                  path: |
                      junit.xml
                      test-output.json


            - name: Install GitHub CLI
              run: |
                  sudo apt-get update
                  sudo apt-get install -y gh

            - name: Update Gist with new test results
              env:
                  GIST_ID: ${{ secrets.GIST_ID }}
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              run: |
                  gh gist edit $GIST_ID --filename test-output.json --content "$(cat test-output.json)"
                  gh gist edit $GIST_ID --filename junit.xml --content "$(cat junit.xml)"

            - name: Publish Test Results
              # https://github.com/marketplace/actions/publish-test-results#json-result
              uses: EnricoMi/publish-unit-test-result-action@v2
              if: always()
              with:
                  files: |-
                      *.xml
                      *.json
                  json_test_case_results: true # This enables writing out all test case results to JSON
                  report_individual_runs: true


            - name: Conclusion
              run: echo "Conclusion is ${{ fromJSON( steps.test-results.outputs.json ).conclusion }}"
