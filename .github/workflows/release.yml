name: Release
on:
  push:
    tags:
      - 'v*'

# We need write permissions for releases
permissions:
  contents: write
  packages: write
  issues: write
  id-token: write

jobs:
  debug:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Debug conditions
        run: |
          echo "Event name: ${{ github.event_name }}"
          echo "Base ref: ${{ github.event.base_ref }}"
          echo "Ref: ${{ github.ref }}"
          git fetch origin master
          if git merge-base --is-ancestor HEAD origin/master; then
            echo "Tag is on master branch: true"
          else
            echo "Tag is on master branch: false"
          fi

  pre-commit:
    runs-on: ubuntu-latest
    needs: debug
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      # only needed if using signing
      - uses: sigstore/cosign-installer@v3.7.0

      # only needed if using SBOMs
      - uses: anchore/sbom-action/download-syft@v0.17.9

      - uses: actions/setup-go@v6
        with:
          distribution: goreleaser
          version: "~> v2"
          args: release --clean


      - name: Install Go dependencies
        run: go mod tidy
      - name: Set up Python
        uses: actions/setup-python@v4
      - name: Install pre-commit
        run: pip install pre-commit
      - name: Run pre-commit
        run: pre-commit run --all-files

  release:
    needs: pre-commit
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Verify on master
        run: |
          git fetch origin master
          if ! git merge-base --is-ancestor HEAD origin/master; then
            echo "Tag is not on master branch"
            exit 1
          fi

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: 'stable'

      # Generate a GitHub App token for both repositories
      - name: Generate GitHub App Token
        id: generate_token
        uses: actions/create-github-app-token@v1
        with:
          app-id: ${{ secrets.APP_ID }}
          private-key: ${{ secrets.APP_PRIVATE_KEY }}
          repositories: >-
            license-manager,
            homebrew-tap

      # Configure Git for commit authoring
      - name: Configure Git
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      # Run GoReleaser with the GitHub App token
      - uses: goreleaser/goreleaser-action@v4
        with:
          distribution: goreleaser
          version: latest
          args: release --clean
        env:
          # Use the GitHub App token for both operations
          GITHUB_TOKEN: ${{ steps.generate_token.outputs.token }}
