name: Release
on:
  push:
    tags:
      - 'v*'
permissions:
  contents: write
jobs:
  debug:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Debug conditions
        run: |
          echo "Event name: ${{ github.event_name }}"
          echo "Base ref: ${{ github.event.base_ref }}"
          echo "Ref: ${{ github.ref }}"
          # Check if tag is on master
          git fetch origin master
          if git merge-base --is-ancestor HEAD origin/master; then
            echo "Tag is on master branch: true"
          else
            echo "Tag is on master branch: false"
          fi
  pre-commit:
    runs-on: ubuntu-latest
    needs: debug
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-go@v4
        with:
          go-version: 'stable'
      - name: Install Go dependencies
        run: go mod tidy
      - name: Set up Python
        uses: actions/setup-python@v4
      - name: Install pre-commit
        run: pip install pre-commit
      - name: Run pre-commit
        run: pre-commit run --all-files
  release:
    needs: pre-commit
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Verify on master
        run: |
          git fetch origin master
          if ! git merge-base --is-ancestor HEAD origin/master; then
            echo "Tag is not on master branch"
            exit 1
          fi
      - uses: actions/setup-go@v4
        with:
          go-version: 'stable'

      # Configure Git for Homebrew updates
      - name: Configure Git
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      - uses: goreleaser/goreleaser-action@v4
        with:
          distribution: goreleaser
          version: latest
          args: release --clean
        env:
          # Use a separate token for Homebrew tap updates
          GITHUB_TOKEN: ${{ secrets.HOMEBREW_TAP_TOKEN }}
          # The default token is still needed for the main repo
          GITHUB_DEFAULT_TOKEN: ${{ secrets.GITHUB_TOKEN }}
